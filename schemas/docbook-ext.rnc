# This schema is a customization for the XProc language specification
#
# Author: Norman Walsh, <ndw@nwalsh.com>
# Release: $Id: dbspec.rnc,v 1.14 2007/12/13 13:55:19 NormanWalsh Exp $
#
# ======================================================================

namespace ctrl = "http://nwalsh.com/xmlns/schema-control/"
namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace db = "http://docbook.org/ns/docbook"
namespace html = "http://www.w3.org/1999/xhtml"
namespace p = "http://www.w3.org/ns/xproc"
namespace e ="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
default namespace = "http://docbook.org/ns/docbook"

include "/home/ndw/docbook.org/xml/5.0/rng/docbookxi.rnc" {
   start = db.article
   db._any = element * - (db:* | html:* | p:*) {
      (db._any.attribute | text | db._any)*
   }
}

db.all.blocks |= e.rng-pattern | e.rng-fragment | p.declare-step

e.rng-pattern =
   element e:rng-pattern {
      attribute xml:id { text }?,
      attribute name { text },
      attribute role { text }?,
      empty
   }

e.rng-fragment =
   element e:rng-fragment {
      attribute xml:id { text }?,
      attribute name { text },
      attribute role { text }?,
      db._any+
   }

p.declare-step =
   element p:declare-step {
      attribute (* - xml:id) { text }*,
      _any_xproc_syntax*
   }

_any_xproc_syntax =
   element p:* {
      attribute (* - xml:id) { text }*,
      _any_xproc_syntax*
   }

# ======================================================================

db.port.role.attribute = attribute role { text }
db.port.attlist =
   db.port.role.attribute?
 & db.common.attributes
 & db.common.linking.attributes

db.port =
   element port {
      db.code.attlist, (db.programming.inlines | db._text)*
   }

db.markup.inlines |= db.port

# ======================================================================

[
   db:refname [ "parameter" ]
   db:refpurpose [ "Describes the parameters to a component" ]
]
div {

   spec.parameter.role.attribute = attribute role { text }

   spec.parameter.attlist =
      spec.parameter.role.attribute?
    & db.common.attributes
    & attribute name { text }
    & attribute type { text }?
    & attribute required { "no" | "yes" }?

   spec.parameter =
      element p:parameter {
         spec.parameter.attlist,
         empty
      }
}

# ======================================================================

db.technical.inlines |= db.rfc2119

[
   db:refname [ "rfc2119" ]
   db:refpurpose [ "An RFC 2119 keyword" ]
]
div {

   db.rfc2119.role.attribute = attribute role { text }
   db.rfc2119.xrefstyle.attribute = db.xrefstyle.attribute
   db.rfc2119.endterm.attribute = db.endterm.attribute

   db.rfc2119.attlist =
      db.rfc2119.role.attribute?
    & db.common.attributes
    & db.common.linking.attributes
    & db.rfc2119.xrefstyle.attribute?
    & db.rfc2119.endterm.attribute?

   db.rfc2119 =
      element rfc2119 {
         db.rfc2119.attlist,
         db.all.inlines*
      }
}

